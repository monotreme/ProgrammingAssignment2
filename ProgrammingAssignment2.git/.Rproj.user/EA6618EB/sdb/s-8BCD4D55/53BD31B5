{
    "contents" : "## makeCacheMatrix and cacheSolve are a pair of functions which work together to store (cache) a global value of \n## an expensive computaton, such as the inverse of a matrix.  MakeCacheMatrix stores the initial matrix, and a\n## placeholder for the matrix inverse. for When the expensive computation is performed \n## by cacheSolve the cache is checked first, to see if the computation has already been performed, and if it has,\n# the result is retrieved directly.  If the computation has not been performed, it is done and hten stored in the cache.\n\n## Create an object which stores the initial matrix, x, and a place holder for m, which is the \n##  the matrix inverse. The place holder is initialised to NULL. \nmakeCacheMatrix <- function(x = matrix()) {\n  #store as data frames\n  i <- NULL\n  set <- function(y) {\n    x <<- y\n    i <<- NULL\n  }  \n  get <- function() x # retrieves x from cache\n  setinv <- function(inv) i <<- inv # setinv is a fuction which puts inverse of x into i\n  getinv <- function() i # getinv is a function that retrieves inverse of matrix from cache\n  list(set = set, get = get,\n       setinv = setinv,\n       getinv = getinv)\n}\n\n\n## This function returns the inverse of a matrix, either from a cache if has already been calculated, or by calculation if not.\n## If it has been calculated, the inverse is stored in cache. \n\ncacheSolve <- function(x= matrix(), ...) {\n  ## Return a matrix that is the inverse of 'x'\n \n  i <-x$getinv() # get value of inverse from cache, (NULL, if not already calculated)\n  if(!is.null(i)) {\n    message(\"getting cached data\")\n    return(i)\n  }\n\n  data <- x$get()\n  i <- solve(data)\n  x$setinv(i)\n  i\n}",
    "created" : 1397707784772.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3883964613",
    "id" : "53BD31B5",
    "lastKnownWriteTime" : 1397824747,
    "path" : "~/ProgrammingAssignment2/ProgrammingAssignment2.git/cachematrix.R",
    "project_path" : "cachematrix.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : true,
    "type" : "r_source"
}